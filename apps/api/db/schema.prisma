datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Verified {
  id        String   @id
  createdAt DateTime @default(now())
}

model StaffPick {
  id        String        @id
  type      StaffPickType
  score     Int           @default(0)
  createdAt DateTime      @default(now())

  // Indexes
  @@index([type, score])
}

model Preference {
  id                           String   @id
  isPride                      Boolean  @default(false)
  highSignalNotificationFilter Boolean  @default(false)
  createdAt                    DateTime @default(now())
}

model MembershipNft {
  id                String   @id
  dismissedOrMinted Boolean  @default(false)
  createdAt         DateTime @default(now())
}

model Group {
  id          String   @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  slug        String   @unique
  name        String
  description String
  avatar      String
  tags        String[]
  lens        String?
  x           String?
  discord     String?
  instagram   String?
  featured    Boolean  @default(false)
  createdAt   DateTime @default(now())

  // Indexes
  @@index([slug, featured])
}

model Pro {
  profileId String    @id
  hash      String
  createdAt DateTime  @default(now())
  expiresAt DateTime?

  // Indexes
  @@index([hash])
}

model Feature {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  key       String   @unique
  priority  Int      @default(0)
  enabled   Boolean  @default(true)
  createdAt DateTime @default(now())

  // Relations
  profiles ProfileFeature[]

  // Indexes
  @@index([key, priority])
}

model ProfileFeature {
  profileId String
  featureId String   @db.Uuid
  feature   Feature  @relation(fields: [featureId], references: [id], onDelete: Cascade)
  enabled   Boolean  @default(true)
  createdAt DateTime @default(now())

  @@id([profileId, featureId])
  // Indexes
  @@index([profileId, featureId])
}

enum StaffPickType {
  PROFILE
  GROUP
}
